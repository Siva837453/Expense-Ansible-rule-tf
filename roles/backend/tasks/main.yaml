- name: disable nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs < 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.dnf:
    name: "{{item}}"
    state: latest
  loop:
    - nodejs
    - mysql

- name: Create user
  ansible.builtin.user:
    name: expense


- name: import pre-req file
  tags:
  - deployment
  ansible.builtin.import_role:
    name: common
    tasks_from: app_pre_req.yaml

# - name: Make directory
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: Download file from a file path
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-{{component}}-v2.zip
#     dest: /tmp/backend.zip

# - name: unzip the file  #Unarchive a file that is already on the remote machine
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes
- name: install npm
  tags:
  - deployment
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: copy backend service file
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: Install python myql dependencies  # to connect mysql db from ansible
  ansible.builtin.pip:
    name:
    - pymysql
    - cryptography   
    executable: pip3.9

- name: import data into mysql
  community.mysql.mysql_db:
    login_user: "{{ login_user }}"
    login_password: "{{login_password}}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    state: import
    name: all

- name: daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: Start and enable backend
  tags:
  - deployment
  ansible.builtin.service:
    name: backend
    state: restarted
    enabled: yes